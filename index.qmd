---
title: "Exciting things I learned at rstudio::conf(2022)"
format:
  revealjs:
    # highlight-style: tango
    # code-link: true # TODO
    preview-links: true
    revealjs-plugins:
      - fullscreen
    # include-in-header: "meta.html"
    # include-after-body: "postprocessing.html"
    # footer: "https://trangdata.github.io/last-rstudio-conf"
    # slide-number: false
    theme: [default, style.scss]
    execute:
      echo: true
      eval: true
    code-line-numbers: false
    knitr:
      opts_chunk:
        R.options:
          width: 70
        class-source: "medium-code-chunk"
        class-output: "medium-chunk-output"
        dev: "svglite"
        # dev.args:
        #   scaling: 1.3
editor: visual
bibliography: references.bib
---

##  {#quarto background="#447098"}

[Quarto]{.centered-slide-text} <!-- the new Rmarkdown/Jupyter -->

##  {#quarto-site background="#f6f9fb"}

<iframe class="stretch" data-src="https://quarto.org/" title="https://quarto.org/">

</iframe>

##  {#codes}

```{r}
#| echo: fenced
!4 %in% c(4, 5, 1)
```

```{julia}
#| echo: fenced
4 ‚àâ [4, 5, 1]
```

```{python}
#| echo: fenced
4 not in [4, 5, 1]
```

## Unification

::: incremental
-   Languages

    ```{r, engine = 'bash', eval=FALSE}
    quarto preview notebook.ipynb --to pdf
    quarto convert notebook.ipynb # to .qmd
    ```

-   Platforms ![quarto-unify](quarto-unify.png)
:::

## Simplification

-   Flexible engines: Knitr, Jupyter, and Observable
-   Easy transition: `.Rmd ‚Üí .qmd`
-   RStudio IDE Visual Editor
    -   Easy editing/formatting of Markdown tables
    -   Copy/paste from Google docs
    -   Citation [@quarto]
    -   Insert anything: `‚åò/`

##  {#quarto-demo background-iframe="https://mine.quarto.pub/hello-quarto/#/demo-teach"}

##  {#sampada background="#f8e6e4"}

<iframe class="stretch" data-src="https://sampadapokharel.github.io/" title="Sampada">

</iframe>

##  {#posit-logo background="#292f2c"}

![](https://d33wubrfki0l68.cloudfront.net/f567102197110696f30ee8983050ecdb994adf8c/59526/blog/rstudio-is-becoming-posit/thumbnail_hub4076432a9bd62034697fb6bf5e4d30a_143092_2220x0_resize_q75_box.jpg){.r-stretch}

<!-- [RStudio ‚Üí Posit]{.centered-slide-text} -->

## The Posit future

::: incremental
-   Carlos Rios will need to change all of his RSConnect, Workbench, Package Manager slides üòà
-   More features for Python, Julia, etc.
    -   [Shiny for Python](https://shiny.rstudio.com/py/)
    -   The language-agnostic [Quarto](https://quarto.org) engine
    -   WASM: code on a browser with [WebR](https://github.com/georgestagg/webR)
-   Terrible puns: *posit*ive, de*posit* ü§¶üèΩ
:::

##  {#tidymodeling background="white"}

<iframe class="stretch" data-src="https://www.tmwr.org/" title="Tidymodeling">

</iframe>

## New ways to build Shiny apps

-   [gridlayout](https://rstudio.github.io/gridlayout/): layout complex dashboards, built on CSS grid
-   [shinyuieditor](https://rstudio.github.io/shinyuieditor/): a drag-and-drop visual editor for your Shiny app's ui
-   [Dashboard-Builder](https://github.com/petergandenberger/dashboard-builder): generate even server's code

##  {#uieditor-demo background-iframe="https://nickstrayer.me/rstudioconf2022/videos/drag-and-drop.webm"}

## shinytest2: game changer!

-   `record_test()`

```{r}
#| eval: false

test_that("{shinytest2} recording: simple-app", {
  app <- AppDriver$new(name = "simple-app", height = 407, width = 348)
  app$set_inputs(name = "Barret")
  app$click("greet")
  app$expect_values()
})
```

-   `app$view()`

-   `shiny::exportTestValue()`

## Other neat talks

-   [WASM WebR, Emscripten](https://webr.gwstagg.co.uk/)
-   [geoarrow](https://github.com/paleolimbot/geoarrow)
-   tidysynthesis
-   Kelly O'Briant's [Off-Host Content Execution for Posit Connect](https://kelly.quarto.pub/rstudioconf-talk-2022/)
-   [diffify](https://diffify.com/)
-   Alice Walsh's [Becoming Creative](https://awalsh17.github.io/posts/2022-07-26-rstudio-conference-talk-2022/slides/index.html#14)

## Package development masterclass

-   Tests: `test code != regular code`
    -   everything inside a `testthat()` chunk
-   Documentation: `useful != exactly correct`
    -   `@param x,y`
    -   `@keywords internal`

## Write [better error messages](https://cli.r-lib.org/)

-   [**Consistent**]{style="color:#a23e02"}
-   [**Transparent**]{style="color:#a23e02"}: type, value
-   [**Relevant**]{style="color:#a23e02"}: which function failed, for which argument
-   [**Exhaustive**]{style="color:#a23e02"}: contextual information, external resources
-   [**Concise**]{style="color:#a23e02"}: avoid paragraphs of text
-   `expect_snapshot()`

## Error bullets

```{r}
#| error: true
cli::cli_abort(c(
  "My error message.",
  "*" = "Bullet",
  "i" = "Info bullet",
  "x" = "Cross bullet",
  "v" = "Check bullet"
))
```

## [Function design](https://design.tidyverse.org/)

-   `rlang::arg_match()`: more about argument than match, autocomplete, etc.

-   `cli_inform()`

##  {#other-workshops background="#986C44"}

[Other workshops]{.centered-slide-text} <!-- the new Rmarkdown/Jupyter -->

##  {#linked-workshops}

-   [Shiny in production](https://shinyprod.com/schedule.html)
-   [What they forgot to teach you about R](https://rstats-wtf.github.io/wtf-debugging-slides)
-   [Art from Code](https://art-from-code.netlify.app/)
-   [nbdev + Quarto](https://nbdev.fast.ai/)

## References

::: {#refs}
:::

##  {#thanks background="#449896"}

[Thank you!]{.centered-slide-text}
